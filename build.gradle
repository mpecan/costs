import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.2.71'
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version '1.2.71'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.2.71'
	id 'org.jetbrains.kotlin.kapt' version '1.2.71'
	id "com.moowork.node" version "1.3.1"
}

apply plugin: 'io.spring.dependency-management'

group = 'si.pecan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group: 'org.springframework.data'
	}
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.apache.commons:commons-csv:1.6'
	implementation 'org.springframework.data:spring-data-jpa:2.2.0.M4'
	implementation 'org.springframework.data:spring-data-commons:2.2.0.M4'

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly ('org.hibernate:hibernate-jpamodelgen')
	kapt ('org.hibernate:hibernate-jpamodelgen')

	testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "com.winterbe:expekt:0.5.0"
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

node {
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: YarnTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/client")
	args = ["install"]
}

task appNpmBuild(type: YarnTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/client")
	args = ["run", "build"]
}

task copyWebApp(type: Copy) {
	from 'client/build'
	into 'build/resources/main/static/.'
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
jar.dependsOn copyWebApp
